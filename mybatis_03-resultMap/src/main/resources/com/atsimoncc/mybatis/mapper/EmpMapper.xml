<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace 要與 Mapper 介面的全類名一致-->
<mapper namespace="com.atsimoncc.mybatis.mapper.EmpMapper">
    <!--
        欄位名與屬性名稱不一致的情況 如何處理映射關係
        1. 為查詢的欄位設定別名 和屬性名稱一致
        2. 當欄位符合 MySQL 使用下滑線 而屬性符合 Java 要求使用駝峰
        此時可以在 MyBatis 的核心配置文件設置一個全局配置 可以自動將下滑線映射為駝峰
        emp_id -> empId
        emp_name -> empName
        3. 使用 resultMap 自定義映射處理
        處理多對一的映射關係
        1. 級聯
        2. association
        3. 分步查詢
        處理一對多的映射關係
        1. collection
        2. 分步查詢
    -->
    <!-- Emp getEmpByEmpId(@Param("empId") int empId); -->
    <select id="getEmpByEmpIdOld" resultType="Emp">
        <!-- select emp_id empId, emp_name empName, age, gender from t_emp where emp_id = #{empId} -->
        select * from t_emp where emp_id = #{empId}
    </select>
    <!--
        resultMap: 設定自定義映射的關係
        id: 唯一標示
        type: 處理映射關係的實體類類型
        常用的標籤:
        id: 處理主鍵與實體類中屬性映射的關係
        result: 處理普通欄位與實體類中屬性映射的關係
        association: 處理多對一的映射關係(處理實體類類型的屬性)
        collection: 處理一對多的映射關係(處理集合類型的屬性)
        column: 設定映射關係中的欄位名 必須是sql查出的某個欄位
        property: 設定映射關係中的屬性名 必須是處理的實體類類型中的屬性名
    -->
    <resultMap id="empResultMap" type="Emp"><!-- 看是哪個不一致 處理的類型為 Emp -->
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
    </resultMap>
    <select id="getEmpByEmpId" resultMap="empResultMap"><!-- 對應 resultMap 標籤的 id -->
        <!-- select emp_id empId, emp_name empName, age, gender from t_emp where emp_id = #{empId} -->
        select * from t_emp where emp_id = #{empId}
    </select>

    <!-- 級聯 -->
    <resultMap id="empAndDeptResultMapOne" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
        <result column="dept_id" property="dept.deptId"></result>
        <result column="dept_name" property="dept.deptName"></result>
    </resultMap>

    <!-- association -->
    <resultMap id="empAndDeptResultMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
        <!--
            association: 處理多對一的映射關係(處理實體類類型的屬性)
            property: 設置需要處理映射關係的屬性的屬性名
            javaType: 設置要處裡的屬性的類型
        -->
        <association property="dept" javaType="Dept">
            <id column="dept_id" property="deptId"></id>
            <result column="dept_name" property="deptName"></result>
        </association>
    </resultMap>
    <!-- Emp getEmpAndDeptByEmpId(@Param("empId") int empId); -->
    <select id="getEmpAndDeptByEmpId" resultMap="empAndDeptResultMap">
        select
            t_emp.*, t_dept.*
        from t_emp
        left join t_dept
        on t_emp.dept_id = t_dept.dept_id
        where t_emp.emp_id = #{empId}
    </select>


    <resultMap id="empAndDeptByStepResultMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
        <!--
            property: 設置需要處理映射關係的屬性的屬性名
            select: 設置分步查詢的 sql 的唯一標示
            column: 將查詢出的某個欄位作為分步查詢的 sql 的條件
            fetchType: 在全局設置開啟了延遲加載的環境中 透過此屬性可設置當前的分步查詢為立即加載或延遲加載
            fetchType="eager(立即加載)|lazy(延遲加載)"
        -->
        <association property="dept" fetchType="eager"
                     select="com.atsimoncc.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo"
                     column="dept_id"></association><!-- column 表示是用當前查詢的哪個欄位當下一次的查詢條件 -->
    </resultMap>
    <!-- Emp getEmpAndDeptByStepOne(@Param("empId") int empId); -->
    <select id="getEmpAndDeptByStepOne" resultMap="empAndDeptByStepResultMap">
        select * from t_emp where emp_id = #{empId}
    </select>


    <!-- List<Emp> getDeptAndEmpByStepTwo(@Param("deptId") Integer deptId); -->
    <select id="getDeptAndEmpByStepTwo" resultType="Emp">
        select * from t_emp where dept_id = #{deptId}
    </select>
</mapper>